{"ast":null,"code":"// src/index.ts\nimport { Globals } from \"@react-spring/core\";\nimport { unstable_batchedUpdates } from \"react-dom\";\nimport { createStringInterpolator, colors } from \"@react-spring/shared\";\nimport { createHost } from \"@react-spring/animated\";\n\n// src/applyAnimatedValues.ts\nvar isCustomPropRE = /^--/;\nfunction dangerousStyleValue(name, value) {\n  if (value == null || typeof value === \"boolean\" || value === \"\") return \"\";\n  if (typeof value === \"number\" && value !== 0 && !isCustomPropRE.test(name) && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + \"px\";\n  return (\"\" + value).trim();\n}\nvar attributeCache = {};\nfunction applyAnimatedValues(instance, props) {\n  if (!instance.nodeType || !instance.setAttribute) {\n    return false;\n  }\n  const isFilterElement = instance.nodeName === \"filter\" || instance.parentNode && instance.parentNode.nodeName === \"filter\";\n  const {\n    style,\n    children,\n    scrollTop,\n    scrollLeft,\n    viewBox,\n    ...attributes\n  } = props;\n  const values = Object.values(attributes);\n  const names = Object.keys(attributes).map(name => isFilterElement || instance.hasAttribute(name) ? name : attributeCache[name] || (attributeCache[name] = name.replace(/([A-Z])/g,\n  // Attributes are written in dash case\n  n => \"-\" + n.toLowerCase())));\n  if (children !== void 0) {\n    instance.textContent = children;\n  }\n  for (const name in style) {\n    if (style.hasOwnProperty(name)) {\n      const value = dangerousStyleValue(name, style[name]);\n      if (isCustomPropRE.test(name)) {\n        instance.style.setProperty(name, value);\n      } else {\n        instance.style[name] = value;\n      }\n    }\n  }\n  names.forEach((name, i) => {\n    instance.setAttribute(name, values[i]);\n  });\n  if (scrollTop !== void 0) {\n    instance.scrollTop = scrollTop;\n  }\n  if (scrollLeft !== void 0) {\n    instance.scrollLeft = scrollLeft;\n  }\n  if (viewBox !== void 0) {\n    instance.setAttribute(\"viewBox\", viewBox);\n  }\n}\nvar isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\nvar prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);\nvar prefixes = [\"Webkit\", \"Ms\", \"Moz\", \"O\"];\nisUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {\n  prefixes.forEach(prefix => acc[prefixKey(prefix, prop)] = acc[prop]);\n  return acc;\n}, isUnitlessNumber);\n\n// src/AnimatedStyle.ts\nimport { AnimatedObject } from \"@react-spring/animated\";\nimport { is, each, toArray, eachProp, FluidValue, getFluidValue, callFluidObservers, hasFluidValue, addFluidObserver, removeFluidObserver } from \"@react-spring/shared\";\nvar domTransforms = /^(matrix|translate|scale|rotate|skew)/;\nvar pxTransforms = /^(translate)/;\nvar degTransforms = /^(rotate|skew)/;\nvar addUnit = (value, unit) => is.num(value) && value !== 0 ? value + unit : value;\nvar isValueIdentity = (value, id) => is.arr(value) ? value.every(v => isValueIdentity(v, id)) : is.num(value) ? value === id : parseFloat(value) === id;\nvar AnimatedStyle = class extends AnimatedObject {\n  constructor(_ref) {\n    let {\n      x,\n      y,\n      z,\n      ...style\n    } = _ref;\n    const inputs = [];\n    const transforms = [];\n    if (x || y || z) {\n      inputs.push([x || 0, y || 0, z || 0]);\n      transforms.push(xyz => [`translate3d(${xyz.map(v => addUnit(v, \"px\")).join(\",\")})`,\n      // prettier-ignore\n      isValueIdentity(xyz, 0)]);\n    }\n    eachProp(style, (value, key) => {\n      if (key === \"transform\") {\n        inputs.push([value || \"\"]);\n        transforms.push(transform => [transform, transform === \"\"]);\n      } else if (domTransforms.test(key)) {\n        delete style[key];\n        if (is.und(value)) return;\n        const unit = pxTransforms.test(key) ? \"px\" : degTransforms.test(key) ? \"deg\" : \"\";\n        inputs.push(toArray(value));\n        transforms.push(key === \"rotate3d\" ? _ref2 => {\n          let [x2, y2, z2, deg] = _ref2;\n          return [`rotate3d(${x2},${y2},${z2},${addUnit(deg, unit)})`, isValueIdentity(deg, 0)];\n        } : input => [`${key}(${input.map(v => addUnit(v, unit)).join(\",\")})`, isValueIdentity(input, key.startsWith(\"scale\") ? 1 : 0)]);\n      }\n    });\n    if (inputs.length) {\n      style.transform = new FluidTransform(inputs, transforms);\n    }\n    super(style);\n  }\n};\nvar FluidTransform = class extends FluidValue {\n  constructor(inputs, transforms) {\n    super();\n    this.inputs = inputs;\n    this.transforms = transforms;\n    this._value = null;\n  }\n  get() {\n    return this._value || (this._value = this._get());\n  }\n  _get() {\n    let transform = \"\";\n    let identity = true;\n    each(this.inputs, (input, i) => {\n      const arg1 = getFluidValue(input[0]);\n      const [t, id] = this.transforms[i](is.arr(arg1) ? arg1 : input.map(getFluidValue));\n      transform += \" \" + t;\n      identity = identity && id;\n    });\n    return identity ? \"none\" : transform;\n  }\n  // Start observing our inputs once we have an observer.\n  observerAdded(count) {\n    if (count == 1) each(this.inputs, input => each(input, value => hasFluidValue(value) && addFluidObserver(value, this)));\n  }\n  // Stop observing our inputs once we have no observers.\n  observerRemoved(count) {\n    if (count == 0) each(this.inputs, input => each(input, value => hasFluidValue(value) && removeFluidObserver(value, this)));\n  }\n  eventObserved(event) {\n    if (event.type == \"change\") {\n      this._value = null;\n    }\n    callFluidObservers(this, event);\n  }\n};\n\n// src/primitives.ts\nvar primitives = [\"a\", \"abbr\", \"address\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"bdi\", \"bdo\", \"big\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"cite\", \"code\", \"col\", \"colgroup\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"dialog\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"img\", \"input\", \"ins\", \"kbd\", \"keygen\", \"label\", \"legend\", \"li\", \"link\", \"main\", \"map\", \"mark\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"nav\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"picture\", \"pre\", \"progress\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"small\", \"source\", \"span\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"title\", \"tr\", \"track\", \"u\", \"ul\", \"var\", \"video\", \"wbr\",\n// SVG\n\"circle\", \"clipPath\", \"defs\", \"ellipse\", \"foreignObject\", \"g\", \"image\", \"line\", \"linearGradient\", \"mask\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\", \"stop\", \"svg\", \"text\", \"tspan\"];\n\n// src/index.ts\nexport * from \"@react-spring/core\";\nGlobals.assign({\n  batchedUpdates: unstable_batchedUpdates,\n  createStringInterpolator,\n  colors\n});\nvar host = createHost(primitives, {\n  applyAnimatedValues,\n  createAnimatedStyle: style => new AnimatedStyle(style),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getComponentProps: _ref3 => {\n    let {\n      scrollTop,\n      scrollLeft,\n      ...props\n    } = _ref3;\n    return props;\n  }\n});\nvar animated = host.animated;\nexport { animated as a, animated };","map":{"version":3,"mappings":"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UACA,OACA,MACA,MACA,MACA,SACA,YACA,cACA,UACA,UACA,QACA,MACA,MACA,MACA,MACA,MACA,MACA,QACA,UACA,UACA,MACA,QACA,KACA,UACA,OACA,SACA,OACA,OACA,UACA,SACA,UACA,MACA,QACA,QACA,OACA,QACA,QACA,YACA,QACA,SACA,OACA,YACA,UACA,MACA,YACA,UACA,UACA,KACA,SACA,WACA,OACA,YACA,KACA,MACA,MACA,QACA,KACA,QACA,UACA,WACA,UACA,SACA,UACA,QACA,UACA,SACA,OACA,WACA,OACA,SACA,SACA,MACA,YACA,SACA,MACA,SACA,QACA,SACA,MACA,SACA,KACA,MACA,OACA,SACA;AAAA;AAEA,UACA,YACA,QACA,WACA,iBACA,KACA,SACA,QACA,kBACA,QACA,QACA,WACA,WACA,YACA,kBACA,QACA,QACA,OACA,QACA,QACF;;;AH9GA,cAAc;AAjBdhJ,QAAQiJ,OAAO;EACbC,gBAAgBjJ;EAChBC;EACAC;AACF,CAAC;AAED,IAAMgJ,OAAO/I,WAAW4I,YAAY;EAClClI;EACAsI,qBAAqB9H,SAAS,IAAI6F,cAAc7F,KAAK;EAAA;EAErD+H,mBAAmB;IAAA,IAAC;MAAE7H;MAAWC;MAAY,GAAGT;IAAM;IAAA,OAAMA;EAAA;AAC9D,CAAC;AAEM,IAAMsI,WAAWH,KAAKG","names":["Globals","unstable_batchedUpdates","createStringInterpolator","colors","createHost","isCustomPropRE","dangerousStyleValue","name","value","test","isUnitlessNumber","hasOwnProperty","trim","attributeCache","applyAnimatedValues","instance","props","nodeType","setAttribute","isFilterElement","nodeName","parentNode","style","children","scrollTop","scrollLeft","viewBox","attributes","values","Object","names","keys","map","hasAttribute","replace","n","toLowerCase","textContent","setProperty","forEach","i","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixKey","prefix","key","charAt","toUpperCase","substring","prefixes","reduce","acc","prop","AnimatedObject","is","each","toArray","eachProp","FluidValue","getFluidValue","callFluidObservers","hasFluidValue","addFluidObserver","removeFluidObserver","domTransforms","pxTransforms","degTransforms","addUnit","unit","num","isValueIdentity","id","arr","every","v","parseFloat","AnimatedStyle","constructor","x","y","z","inputs","transforms","push","xyz","join","transform","und","deg","input","startsWith","length","FluidTransform","_value","get","_get","identity","arg1","t","observerAdded","count","observerRemoved","eventObserved","event","type","primitives","assign","batchedUpdates","host","createAnimatedStyle","getComponentProps","animated"],"sources":["C:\\Users\\ABCD\\Desktop\\task-management-app-master\\frontend\\node_modules\\@react-spring\\web\\src\\index.ts","C:\\Users\\ABCD\\Desktop\\task-management-app-master\\frontend\\node_modules\\@react-spring\\web\\src\\applyAnimatedValues.ts","C:\\Users\\ABCD\\Desktop\\task-management-app-master\\frontend\\node_modules\\@react-spring\\web\\src\\AnimatedStyle.ts","C:\\Users\\ABCD\\Desktop\\task-management-app-master\\frontend\\node_modules\\@react-spring\\web\\src\\primitives.ts"],"sourcesContent":["import { Globals } from '@react-spring/core'\nimport { unstable_batchedUpdates } from 'react-dom'\nimport { createStringInterpolator, colors } from '@react-spring/shared'\nimport { createHost } from '@react-spring/animated'\nimport { applyAnimatedValues } from './applyAnimatedValues'\nimport { AnimatedStyle } from './AnimatedStyle'\nimport { WithAnimated } from './animated'\nimport { primitives } from './primitives'\n\nGlobals.assign({\n  batchedUpdates: unstable_batchedUpdates,\n  createStringInterpolator,\n  colors,\n})\n\nconst host = createHost(primitives, {\n  applyAnimatedValues,\n  createAnimatedStyle: style => new AnimatedStyle(style),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  getComponentProps: ({ scrollTop, scrollLeft, ...props }) => props,\n})\n\nexport const animated = host.animated as WithAnimated\nexport { animated as a }\n\nexport * from './animated'\nexport * from '@react-spring/core'\n","import { Lookup } from '@react-spring/types'\n\nconst isCustomPropRE = /^--/\n\ntype Value = string | number | boolean | null\n\nfunction dangerousStyleValue(name: string, value: Value) {\n  if (value == null || typeof value === 'boolean' || value === '') return ''\n  if (\n    typeof value === 'number' &&\n    value !== 0 &&\n    !isCustomPropRE.test(name) &&\n    !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])\n  )\n    return value + 'px'\n  // Presumes implicit 'px' suffix for unitless numbers\n  return ('' + value).trim()\n}\n\nconst attributeCache: Lookup<string> = {}\n\ntype Instance = HTMLDivElement & { style?: Lookup }\n\nexport function applyAnimatedValues(instance: Instance, props: Lookup) {\n  if (!instance.nodeType || !instance.setAttribute) {\n    return false\n  }\n\n  const isFilterElement =\n    instance.nodeName === 'filter' ||\n    (instance.parentNode && instance.parentNode.nodeName === 'filter')\n\n  const { style, children, scrollTop, scrollLeft, viewBox, ...attributes } =\n    props!\n\n  const values = Object.values(attributes)\n  const names = Object.keys(attributes).map(name =>\n    isFilterElement || instance.hasAttribute(name)\n      ? name\n      : attributeCache[name] ||\n        (attributeCache[name] = name.replace(\n          /([A-Z])/g,\n          // Attributes are written in dash case\n          n => '-' + n.toLowerCase()\n        ))\n  )\n\n  if (children !== void 0) {\n    instance.textContent = children\n  }\n\n  // Apply CSS styles\n  for (const name in style) {\n    if (style.hasOwnProperty(name)) {\n      const value = dangerousStyleValue(name, style[name])\n      if (isCustomPropRE.test(name)) {\n        instance.style.setProperty(name, value)\n      } else {\n        instance.style[name] = value\n      }\n    }\n  }\n\n  // Apply DOM attributes\n  names.forEach((name, i) => {\n    instance.setAttribute(name, values[i])\n  })\n\n  if (scrollTop !== void 0) {\n    instance.scrollTop = scrollTop\n  }\n  if (scrollLeft !== void 0) {\n    instance.scrollLeft = scrollLeft\n  }\n  if (viewBox !== void 0) {\n    instance.setAttribute('viewBox', viewBox)\n  }\n}\n\nlet isUnitlessNumber: { [key: string]: true } = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n}\n\nconst prefixKey = (prefix: string, key: string) =>\n  prefix + key.charAt(0).toUpperCase() + key.substring(1)\nconst prefixes = ['Webkit', 'Ms', 'Moz', 'O']\n\nisUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {\n  prefixes.forEach(prefix => (acc[prefixKey(prefix, prop)] = acc[prop]))\n  return acc\n}, isUnitlessNumber)\n","import { AnimatedObject } from '@react-spring/animated'\nimport { Lookup, OneOrMore } from '@react-spring/types'\nimport {\n  is,\n  each,\n  toArray,\n  eachProp,\n  FluidValue,\n  FluidEvent,\n  getFluidValue,\n  callFluidObservers,\n  hasFluidValue,\n  addFluidObserver,\n  removeFluidObserver,\n} from '@react-spring/shared'\n\n/** The transform-functions\n * (https://developer.mozilla.org/fr/docs/Web/CSS/transform-function)\n * that you can pass as keys to your animated component style and that will be\n * animated. Perspective has been left out as it would conflict with the\n * non-transform perspective style.\n */\nconst domTransforms = /^(matrix|translate|scale|rotate|skew)/\n\n// These keys have \"px\" units by default\nconst pxTransforms = /^(translate)/\n\n// These keys have \"deg\" units by default\nconst degTransforms = /^(rotate|skew)/\n\ntype Value = number | string\n\n/** Add a unit to the value when the value is unit-less (eg: a number) */\nconst addUnit = (value: Value, unit: string): string | 0 =>\n  is.num(value) && value !== 0 ? value + unit : value\n\n/**\n * Checks if the input value matches the identity value.\n *\n *     isValueIdentity(0, 0)              // => true\n *     isValueIdentity('0px', 0)          // => true\n *     isValueIdentity([0, '0px', 0], 0)  // => true\n */\nconst isValueIdentity = (value: OneOrMore<Value>, id: number): boolean =>\n  is.arr(value)\n    ? value.every(v => isValueIdentity(v, id))\n    : is.num(value)\n    ? value === id\n    : parseFloat(value) === id\n\ntype Inputs = ReadonlyArray<Value | FluidValue<Value>>[]\ntype Transforms = ((value: any) => [string, boolean])[]\n\n/**\n * This AnimatedStyle will simplify animated components transforms by\n * interpolating all transform function passed as keys in the style object\n * including shortcuts such as x, y and z for translateX/Y/Z\n */\nexport class AnimatedStyle extends AnimatedObject {\n  constructor({ x, y, z, ...style }: Lookup) {\n    /**\n     * An array of arrays that contains the values (static or fluid)\n     * used by each transform function.\n     */\n    const inputs: Inputs = []\n    /**\n     * An array of functions that take a list of values (static or fluid)\n     * and returns (1) a CSS transform string and (2) a boolean that's true\n     * when the transform has no effect (eg: an identity transform).\n     */\n    const transforms: Transforms = []\n\n    // Combine x/y/z into translate3d\n    if (x || y || z) {\n      inputs.push([x || 0, y || 0, z || 0])\n      transforms.push((xyz: Value[]) => [\n        `translate3d(${xyz.map(v => addUnit(v, 'px')).join(',')})`, // prettier-ignore\n        isValueIdentity(xyz, 0),\n      ])\n    }\n\n    // Pluck any other transform-related props\n    eachProp(style, (value, key) => {\n      if (key === 'transform') {\n        inputs.push([value || ''])\n        transforms.push((transform: string) => [transform, transform === ''])\n      } else if (domTransforms.test(key)) {\n        delete style[key]\n        if (is.und(value)) return\n\n        const unit = pxTransforms.test(key)\n          ? 'px'\n          : degTransforms.test(key)\n          ? 'deg'\n          : ''\n\n        inputs.push(toArray(value))\n        transforms.push(\n          key === 'rotate3d'\n            ? ([x, y, z, deg]: [number, number, number, Value]) => [\n                `rotate3d(${x},${y},${z},${addUnit(deg, unit)})`,\n                isValueIdentity(deg, 0),\n              ]\n            : (input: Value[]) => [\n                `${key}(${input.map(v => addUnit(v, unit)).join(',')})`,\n                isValueIdentity(input, key.startsWith('scale') ? 1 : 0),\n              ]\n        )\n      }\n    })\n\n    if (inputs.length) {\n      style.transform = new FluidTransform(inputs, transforms)\n    }\n\n    super(style)\n  }\n}\n\n/** @internal */\nclass FluidTransform extends FluidValue<string> {\n  protected _value: string | null = null\n\n  constructor(readonly inputs: Inputs, readonly transforms: Transforms) {\n    super()\n  }\n\n  get() {\n    return this._value || (this._value = this._get())\n  }\n\n  protected _get() {\n    let transform = ''\n    let identity = true\n    each(this.inputs, (input, i) => {\n      const arg1 = getFluidValue(input[0])\n      const [t, id] = this.transforms[i](\n        is.arr(arg1) ? arg1 : input.map(getFluidValue)\n      )\n      transform += ' ' + t\n      identity = identity && id\n    })\n    return identity ? 'none' : transform\n  }\n\n  // Start observing our inputs once we have an observer.\n  protected observerAdded(count: number) {\n    if (count == 1)\n      each(this.inputs, input =>\n        each(\n          input,\n          value => hasFluidValue(value) && addFluidObserver(value, this)\n        )\n      )\n  }\n\n  // Stop observing our inputs once we have no observers.\n  protected observerRemoved(count: number) {\n    if (count == 0)\n      each(this.inputs, input =>\n        each(\n          input,\n          value => hasFluidValue(value) && removeFluidObserver(value, this)\n        )\n      )\n  }\n\n  eventObserved(event: FluidEvent) {\n    if (event.type == 'change') {\n      this._value = null\n    }\n    callFluidObservers(this, event)\n  }\n}\n","export type Primitives = keyof JSX.IntrinsicElements\nexport const primitives: Primitives[] = [\n  'a',\n  'abbr',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'base',\n  'bdi',\n  'bdo',\n  'big',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'data',\n  'datalist',\n  'dd',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'div',\n  'dl',\n  'dt',\n  'em',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'iframe',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'keygen',\n  'label',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'map',\n  'mark',\n  'menu',\n  'menuitem',\n  'meta',\n  'meter',\n  'nav',\n  'noscript',\n  'object',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'param',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'script',\n  'section',\n  'select',\n  'small',\n  'source',\n  'span',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'title',\n  'tr',\n  'track',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n  // SVG\n  'circle',\n  'clipPath',\n  'defs',\n  'ellipse',\n  'foreignObject',\n  'g',\n  'image',\n  'line',\n  'linearGradient',\n  'mask',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialGradient',\n  'rect',\n  'stop',\n  'svg',\n  'text',\n  'tspan',\n]\n"]},"metadata":{},"sourceType":"module"}