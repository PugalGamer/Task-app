{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABCD\\\\Desktop\\\\task-management-app-master\\\\frontend\\\\src\\\\Log\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport \"./Login.css\";\nimport jwtDecode from \"jwt-decode\";\nimport { navigate } from \"gatsby\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst handleLogin = async (e, username, password) => {\n  e.preventDefault();\n  try {\n    const response = await axios.post(\"http://localhost:3003/api/users/login\", {\n      username,\n      password\n    });\n    const decodedToken = jwtDecode(response.data.token);\n\n    // Extract user ID from the decoded token\n    const userId = decodedToken.username; // Assuming user ID is stored in the 'username' field\n\n    // Set user ID and token in localStorage\n    localStorage.setItem(\"userId\", userId);\n    localStorage.setItem(\"token\", response.data.token);\n    console.log(\"success\");\n    navigate(\"/ListView\");\n  } catch (error) {\n    console.error(\"Login error:\", error.message);\n  }\n};\nconst Login = _ref => {\n  _s();\n  let {} = _ref;\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  // const navigate = useNavigate();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contain\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleLogin(e, username, password),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loginBx\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"username\",\n              id: \"username\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"password\",\n              id: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\"\n              // value=\"Login\" onClick={handleLogin}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/register\",\n                  children: \"Sign up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 42\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Lrw7JeD9zj6OUWhT/IH4OIvPKEk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","Link","jwtDecode","navigate","handleLogin","e","username","password","preventDefault","response","post","decodedToken","data","token","userId","localStorage","setItem","console","log","error","message","Login","setUsername","setPassword","target","value"],"sources":["C:/Users/ABCD/Desktop/task-management-app-master/frontend/src/Log/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { navigate } from \"gatsby\";\r\nconst handleLogin = async (e, username, password) => {\r\n  e.preventDefault();\r\n\r\n  try {\r\n    const response = await axios.post(\"http://localhost:3003/api/users/login\", {\r\n      username,\r\n      password,\r\n    });\r\n    const decodedToken = jwtDecode(response.data.token);\r\n\r\n    // Extract user ID from the decoded token\r\n    const userId = decodedToken.username; // Assuming user ID is stored in the 'username' field\r\n\r\n    // Set user ID and token in localStorage\r\n    localStorage.setItem(\"userId\", userId);\r\n    localStorage.setItem(\"token\", response.data.token);\r\n    console.log(\"success\");\r\n    navigate(\"/ListView\");\r\n  } catch (error) {\r\n    console.error(\"Login error:\", error.message);\r\n  }\r\n};\r\nconst Login = ({}) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  // const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"contain\">\r\n      <form onSubmit={(e) => handleLogin(e, username, password)}>\r\n        <div className=\"box\">\r\n          <div className=\"login\">\r\n            <div className=\"loginBx\">\r\n              <h2>Login</h2>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"username\"\r\n                id=\"username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                id=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"submit\"\r\n                // value=\"Login\" onClick={handleLogin}\r\n              />\r\n              <div className=\"group\">\r\n                <p>\r\n                  Don't have an account? <Link to=\"/register\">Sign up</Link>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      {/* <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <label htmlFor=\"username\">Username:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n\r\n      <p>\r\n        Don't have an account? <Link to=\"/register\">Sign up</Link>\r\n      </p> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}