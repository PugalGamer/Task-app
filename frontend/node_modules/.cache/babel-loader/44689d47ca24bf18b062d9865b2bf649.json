{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABCD\\\\Desktop\\\\task-management-app-master\\\\frontend\\\\src\\\\component\\\\BoardBox.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useRef, useEffect, useContext } from \"react\";\nimport \"./BoardBox.css\";\nimport { icons } from \"./TaskListRow\";\nimport { NotificationContext } from \"./ViewPage\";\nimport Notification from \"./Notification\";\nimport { TasksContext } from \"./BoardView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDate.prototype.monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nfunction getDateFormula(dueDate) {\n  let day = \"\";\n  let month = \"\";\n  let year = \"\";\n  for (let i = 0; i < dueDate.length; i++) {\n    if (dueDate[i] != \"/\") {\n      day += dueDate[i];\n    } else {\n      year = dueDate.slice(i + 1, dueDate.length);\n      break;\n    }\n  }\n  for (let i = 0; i < year.length; i++) {\n    if (year[i] != \"/\") {\n      month += year[i];\n    } else {\n      month = Date.prototype.monthNames[Number(month - 1)];\n      year = year.slice(i + 1, dueDate.length);\n      break;\n    }\n  }\n  return [day, month, year];\n}\nexport default function BoardBox(_ref) {\n  _s();\n  let {\n    completed,\n    title,\n    category,\n    dueDate,\n    _id,\n    time,\n    description,\n    path\n  } = _ref;\n  const notification = useContext(NotificationContext);\n  const updateTask = useContext(TasksContext);\n  const [titleref, container] = [useRef(), useRef()];\n  const dragStarted = e => {\n    container.current.classList = `board_box_container closed ${category} dragging`;\n  };\n  const dragEnded = async e => {\n    container.current.classList = `board_box_container closed ${category}`;\n    if (container.current.id) {\n      e.preventDefault();\n      const {\n        data\n      } = await axios.put(`http://localhost:3002/api/tasks/${_id}`, {\n        completed: !completed\n      });\n      if (data.success) {\n        notification(currentValue => {\n          if (currentValue) {\n            return [...currentValue, /*#__PURE__*/_jsxDEV(Notification, {\n              msg: data.msg,\n              type: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 49\n            }, this)];\n          }\n          return [/*#__PURE__*/_jsxDEV(Notification, {\n            msg: data.msg,\n            type: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this)];\n        });\n        updateTask(currVal => {\n          return !currVal;\n        });\n      }\n    }\n  };\n  const removeTask = async () => {\n    const {\n      data\n    } = await axios.delete(`http://localhost:3002/api/tasks/${_id}`);\n    if (data.success) {\n      notification(currentValue => {\n        if (currentValue) {\n          return [...currentValue, /*#__PURE__*/_jsxDEV(Notification, {\n            msg: data.msg,\n            type: \"success\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 45\n          }, this)];\n        }\n        return [/*#__PURE__*/_jsxDEV(Notification, {\n          msg: data.msg,\n          type: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this)];\n      });\n      updateTask(currVal => {\n        return !currVal;\n      });\n    }\n  };\n  useEffect(() => {\n    if (title.length > 34) {\n      title = title.slice(0, 31).trim() + \"...\";\n      titleref.current.textContent = title;\n    } else {\n      titleref.current.textContent = title.trim();\n    }\n  }, [title]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    draggable: \"true\",\n    onDragStart: dragStarted,\n    onDragEnd: dragEnded,\n    className: `board_box_container closed ${category}`,\n    ref: container,\n    onClick: () => {\n      container.current.classList = container.current.classList.value == `board_box_container opened ${category}` ? `board_box_container closed ${category}` : `board_box_container opened ${category}`;\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fa-solid fa-xmark\",\n      onClick: removeTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box_icon_container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon_container\",\n        children: icons[category]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box_info_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        ref: titleref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [`${getDateFormula(dueDate)[0]} ${getDateFormula(dueDate)[1]} ${getDateFormula(dueDate)[2]} > `, \"  \", time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"back_info\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this), path != \"/\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: path,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_s(BoardBox, \"ulJTpapObnwKBJa8rJDvb+2NQVs=\");\n_c = BoardBox;\nvar _c;\n$RefreshReg$(_c, \"BoardBox\");","map":{"version":3,"names":["axios","useRef","useEffect","useContext","icons","NotificationContext","Notification","TasksContext","Date","prototype","monthNames","getDateFormula","dueDate","day","month","year","i","length","slice","Number","BoardBox","completed","title","category","_id","time","description","path","notification","updateTask","titleref","container","dragStarted","e","current","classList","dragEnded","id","preventDefault","data","put","success","currentValue","msg","currVal","removeTask","delete","trim","textContent","value"],"sources":["C:/Users/ABCD/Desktop/task-management-app-master/frontend/src/component/BoardBox.js"],"sourcesContent":["import axios from \"axios\";\nimport { useRef, useEffect, useContext } from \"react\";\nimport \"./BoardBox.css\";\nimport {icons} from \"./TaskListRow\";\nimport { NotificationContext } from \"./ViewPage\";\nimport Notification from \"./Notification\";\nimport { TasksContext } from \"./BoardView\"\nDate.prototype.monthNames = [\n    \"January\", \"February\", \"March\",\n    \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\",\n    \"October\", \"November\", \"December\"\n];\nfunction getDateFormula(dueDate) {\n    let day = \"\";\n    let month = \"\";\n    let year = \"\";\n    for (let i =0; i<dueDate.length;i++){\n        if(dueDate[i] != \"/\"){\n            day += dueDate[i];\n        }\n        else{\n            year = dueDate.slice(i+1,dueDate.length);\n            break\n        }\n    }\n    for (let i =0; i<year.length;i++){\n        if(year[i] != \"/\"){\n            month += year[i];\n        }\n        else{\n            month = Date.prototype.monthNames[Number(month-1)]\n            year = year.slice(i+1,dueDate.length);\n            break\n        }\n    }\n    return [day,month,year]\n}\nexport default function BoardBox({ completed,title,category,dueDate,_id,time,description,path }){\n    const notification = useContext(NotificationContext);\n    const updateTask = useContext(TasksContext);\n\n    const [titleref,container] = [useRef(),useRef()];\n    const dragStarted = (e)=>{\n        container.current.classList = `board_box_container closed ${category} dragging`;\n    }\n    const dragEnded = async (e)=>{\n        container.current.classList = `board_box_container closed ${category}`; \n        if(container.current.id){\n            e.preventDefault();                        \n            const {data} = await axios.put(`http://localhost:3002/api/tasks/${_id}`,\n            {\n                completed : !completed\n            });\n            if(data.success){\n                notification(currentValue=>{\n                    if(currentValue){\n                        return [...currentValue,<Notification  msg={data.msg} type=\"success\"/>];\n                    }\n                        return [<Notification  msg={data.msg} type=\"success\"/>]; \n                });\n                \n                updateTask(currVal=>{\n                    return !currVal\n                })\n            }\n            }\n        \n    }\n    const removeTask = async ()=>{\n        const {data} = await axios.delete(`http://localhost:3002/api/tasks/${_id}`);\n        if(data.success){\n            notification(currentValue=>{\n                if(currentValue){\n                    return [...currentValue,<Notification  msg={data.msg} type=\"success\"/>];\n                }\n                    return [<Notification  msg={data.msg} type=\"success\"/>]; \n            });\n            \n            updateTask(currVal=>{\n                return !currVal\n            })\n        }\n\n    };\n    useEffect(() => {\n        if(title.length > 34){\n            title = title.slice(0,31).trim() + \"...\";\n            titleref.current.textContent = title;\n        }\n        else{\n            titleref.current.textContent = title.trim();\n        }\n    },[title]);\n    \n    return(\n        <div draggable=\"true\"  onDragStart={dragStarted} onDragEnd={dragEnded} className={`board_box_container closed ${category}`} ref={container} onClick={()=>{\n            container.current.classList = container.current.classList.value == `board_box_container opened ${category}` ? `board_box_container closed ${category}` : `board_box_container opened ${category}`\n        }}>\n            <i className=\"fa-solid fa-xmark\" onClick={removeTask}></i>\n            <div className=\"box_icon_container\">\n                <div className=\"icon_container\">\n                    {icons[category]}  \n                </div>\n            </div>\n                <div className=\"box_info_container\">\n                <h4 ref={titleref}></h4>\n                <h6>{`${getDateFormula(dueDate)[0]} ${getDateFormula(dueDate)[1]} ${ getDateFormula(dueDate)[2]} > `}  {time}</h6>\n                </div>\n                <div className=\"back_info\">\n                <p>\n                    {description}\n                </p>\n                </div>\n               {path != \"/\"?<img src={path} alt=\"\"/> : \"\"}\n                  \n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}