{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABCD\\\\Desktop\\\\task-management-app-master\\\\frontend\\\\src\\\\component\\\\CalendarView.js\",\n  _s = $RefreshSig$();\nimport \"./CalendarView.css\";\nimport Calendar from \"./Calendar\";\nimport CalendarTaskRow from \"./CalendarTaskRow\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CalendarView() {\n  _s();\n  const [date, setDate] = useState();\n  const [uncompletedTasks, setuncompletedTasks] = useState();\n  const [completedTasks, setcompletedTasks] = useState();\n  const getTasks = async () => {\n    if (date) {\n      const {\n        data\n      } = await axios.get(`http://localhost:3002/api/tasks/date/${date}`);\n      if (data.success === true) {\n        const uncompleted = data.data.filter(e => e.completed === false).map((e, i) => {\n          return /*#__PURE__*/_jsxDEV(CalendarTaskRow, {\n            ...e\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this);\n        });\n        setuncompletedTasks([...uncompleted]);\n        const completed = data.data.filter(e => e.completed === true).map((e, i) => {\n          return /*#__PURE__*/_jsxDEV(CalendarTaskRow, {\n            ...e\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this);\n        });\n        setcompletedTasks([...completed]);\n      }\n    }\n  };\n  useEffect(() => {\n    getTasks();\n  }, [date]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"calendar_view_container\",\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      dateState: setDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"calendar_tasks_container\",\n      children: [completedTasks, uncompletedTasks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(CalendarView, \"gpsx/c7M3VbYKJzDX4Gl5siGz1k=\");\n_c = CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["Calendar","CalendarTaskRow","useEffect","useState","axios","CalendarView","date","setDate","uncompletedTasks","setuncompletedTasks","completedTasks","setcompletedTasks","getTasks","data","get","success","uncompleted","filter","e","completed","map","i"],"sources":["C:/Users/ABCD/Desktop/task-management-app-master/frontend/src/component/CalendarView.js"],"sourcesContent":["\nimport \"./CalendarView.css\"\nimport Calendar from \"./Calendar\";\nimport CalendarTaskRow from \"./CalendarTaskRow\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n\nexport default function CalendarView (){\n    const [date,setDate] = useState();\n    const [uncompletedTasks,setuncompletedTasks] = useState();\n    const [completedTasks,setcompletedTasks] = useState();\n    const getTasks = async ()=>{\n        if(date){\n\n        const {data} = await axios.get(`http://localhost:3002/api/tasks/date/${date}`);\n        if(data.success === true){\n            const uncompleted =  \n            data.data.filter(e=>e.completed === false)\n            .map((e,i)=> {\n                     return <CalendarTaskRow key={i} {...e}/>;\n                \n            });\n            setuncompletedTasks([...uncompleted]);\n            const completed =data.data.filter(e=>e.completed === true)\n            .map((e,i)=> {\n                     return <CalendarTaskRow key={i} {...e}/>;\n            });\n            setcompletedTasks([...completed]);            \n\n        }\n    }\n\n    };\n        useEffect(()=>{\n            getTasks();\n        },[date])\n    return (\n        <div id=\"calendar_view_container\">\n        <Calendar dateState={setDate} />\n        <div id=\"calendar_tasks_container\">\n            {completedTasks}\n            {uncompletedTasks}\n        </div>\n        </div>\n    )\n}"],"mappings":";;AACA,OAAO,oBAAoB;AAC3B,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAG1B,eAAe,SAASC,YAAY,GAAG;EAAA;EACnC,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGJ,QAAQ,EAAE;EACjC,MAAM,CAACK,gBAAgB,EAACC,mBAAmB,CAAC,GAAGN,QAAQ,EAAE;EACzD,MAAM,CAACO,cAAc,EAACC,iBAAiB,CAAC,GAAGR,QAAQ,EAAE;EACrD,MAAMS,QAAQ,GAAG,YAAU;IACvB,IAAGN,IAAI,EAAC;MAER,MAAM;QAACO;MAAI,CAAC,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,wCAAuCR,IAAK,EAAC,CAAC;MAC9E,IAAGO,IAAI,CAACE,OAAO,KAAK,IAAI,EAAC;QACrB,MAAMC,WAAW,GACjBH,IAAI,CAACA,IAAI,CAACI,MAAM,CAACC,CAAC,IAAEA,CAAC,CAACC,SAAS,KAAK,KAAK,CAAC,CACzCC,GAAG,CAAC,CAACF,CAAC,EAACG,CAAC,KAAI;UACJ,oBAAO,QAAC,eAAe;YAAA,GAAaH;UAAC,GAARG,CAAC;YAAA;YAAA;YAAA;UAAA,QAAU;QAEjD,CAAC,CAAC;QACFZ,mBAAmB,CAAC,CAAC,GAAGO,WAAW,CAAC,CAAC;QACrC,MAAMG,SAAS,GAAEN,IAAI,CAACA,IAAI,CAACI,MAAM,CAACC,CAAC,IAAEA,CAAC,CAACC,SAAS,KAAK,IAAI,CAAC,CACzDC,GAAG,CAAC,CAACF,CAAC,EAACG,CAAC,KAAI;UACJ,oBAAO,QAAC,eAAe;YAAA,GAAaH;UAAC,GAARG,CAAC;YAAA;YAAA;YAAA;UAAA,QAAU;QACjD,CAAC,CAAC;QACFV,iBAAiB,CAAC,CAAC,GAAGQ,SAAS,CAAC,CAAC;MAErC;IACJ;EAEA,CAAC;EACGjB,SAAS,CAAC,MAAI;IACVU,QAAQ,EAAE;EACd,CAAC,EAAC,CAACN,IAAI,CAAC,CAAC;EACb,oBACI;IAAK,EAAE,EAAC,yBAAyB;IAAA,wBACjC,QAAC,QAAQ;MAAC,SAAS,EAAEC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eAChC;MAAK,EAAE,EAAC,0BAA0B;MAAA,WAC7BG,cAAc,EACdF,gBAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QACf;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEd;AAAC,GAtCuBH,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}