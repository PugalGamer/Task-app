{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABCD\\\\Desktop\\\\task-management-app-master\\\\frontend\\\\src\\\\component\\\\CalendarView.js\",\n  _s = $RefreshSig$();\nimport \"./CalendarView.css\";\nimport Calendar from \"./Calendar\";\nimport CalendarTaskRow from \"./CalendarTaskRow\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CalendarView() {\n  _s();\n  const [date, setDate] = useState();\n  const [uncompletedTasks, setuncompletedTasks] = useState();\n  const [completedTasks, setcompletedTasks] = useState();\n  const getTasks = async () => {\n    if (date) {\n      const {\n        data\n      } = await axios.get(`http://localhost:3002/api/tasks/date/${date}`);\n      if (data.success === true) {\n        const uncompleted = data.data.filter(e => e.completed === false).map((e, i) => {\n          return /*#__PURE__*/_jsxDEV(CalendarTaskRow, {\n            ...e\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 20\n          }, this);\n        });\n        setuncompletedTasks([...uncompleted]);\n        const completed = data.data.filter(e => e.completed === true).map((e, i) => {\n          return /*#__PURE__*/_jsxDEV(CalendarTaskRow, {\n            ...e\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 20\n          }, this);\n        });\n        setcompletedTasks([...completed]);\n      }\n    }\n  };\n  useEffect(() => {\n    getTasks();\n  }, [date]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"calendar_view_container\",\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      dateState: setDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"calendar_tasks_container\",\n      children: [completedTasks, uncompletedTasks]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarView, \"drks72LQ0hF98fMxXDDZvaLc4eo=\");\n_c = CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["Calendar","CalendarTaskRow","useEffect","useState","axios","CalendarView","date","setDate","uncompletedTasks","setuncompletedTasks","completedTasks","setcompletedTasks","getTasks","data","get","success","uncompleted","filter","e","completed","map","i"],"sources":["C:/Users/ABCD/Desktop/task-management-app-master/frontend/src/component/CalendarView.js"],"sourcesContent":["import \"./CalendarView.css\";\nimport Calendar from \"./Calendar\";\nimport CalendarTaskRow from \"./CalendarTaskRow\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function CalendarView() {\n  const [date, setDate] = useState();\n  const [uncompletedTasks, setuncompletedTasks] = useState();\n  const [completedTasks, setcompletedTasks] = useState();\n  const getTasks = async () => {\n    if (date) {\n      const { data } = await axios.get(\n        `http://localhost:3002/api/tasks/date/${date}`\n      );\n      if (data.success === true) {\n        const uncompleted = data.data\n          .filter((e) => e.completed === false)\n          .map((e, i) => {\n            return <CalendarTaskRow key={i} {...e} />;\n          });\n        setuncompletedTasks([...uncompleted]);\n        const completed = data.data\n          .filter((e) => e.completed === true)\n          .map((e, i) => {\n            return <CalendarTaskRow key={i} {...e} />;\n          });\n        setcompletedTasks([...completed]);\n      }\n    }\n  };\n  useEffect(() => {\n    getTasks();\n  }, [date]);\n  return (\n    <div id=\"calendar_view_container\">\n      <Calendar dateState={setDate} />\n      <div id=\"calendar_tasks_container\">\n        {completedTasks}\n        {uncompletedTasks}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAO,oBAAoB;AAC3B,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,eAAe,SAASC,YAAY,GAAG;EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,EAAE;EAClC,MAAM,CAACK,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGN,QAAQ,EAAE;EAC1D,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,EAAE;EACtD,MAAMS,QAAQ,GAAG,YAAY;IAC3B,IAAIN,IAAI,EAAE;MACR,MAAM;QAAEO;MAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC7B,wCAAuCR,IAAK,EAAC,CAC/C;MACD,IAAIO,IAAI,CAACE,OAAO,KAAK,IAAI,EAAE;QACzB,MAAMC,WAAW,GAAGH,IAAI,CAACA,IAAI,CAC1BI,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,SAAS,KAAK,KAAK,CAAC,CACpCC,GAAG,CAAC,CAACF,CAAC,EAAEG,CAAC,KAAK;UACb,oBAAO,QAAC,eAAe;YAAA,GAAaH;UAAC,GAARG,CAAC;YAAA;YAAA;YAAA;UAAA,QAAW;QAC3C,CAAC,CAAC;QACJZ,mBAAmB,CAAC,CAAC,GAAGO,WAAW,CAAC,CAAC;QACrC,MAAMG,SAAS,GAAGN,IAAI,CAACA,IAAI,CACxBI,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,SAAS,KAAK,IAAI,CAAC,CACnCC,GAAG,CAAC,CAACF,CAAC,EAAEG,CAAC,KAAK;UACb,oBAAO,QAAC,eAAe;YAAA,GAAaH;UAAC,GAARG,CAAC;YAAA;YAAA;YAAA;UAAA,QAAW;QAC3C,CAAC,CAAC;QACJV,iBAAiB,CAAC,CAAC,GAAGQ,SAAS,CAAC,CAAC;MACnC;IACF;EACF,CAAC;EACDjB,SAAS,CAAC,MAAM;IACdU,QAAQ,EAAE;EACZ,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EACV,oBACE;IAAK,EAAE,EAAC,yBAAyB;IAAA,wBAC/B,QAAC,QAAQ;MAAC,SAAS,EAAEC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eAChC;MAAK,EAAE,EAAC,0BAA0B;MAAA,WAC/BG,cAAc,EACdF,gBAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QACb;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GArCuBH,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}