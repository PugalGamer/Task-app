{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABCD\\\\Desktop\\\\task-management-app-master\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Login from \"./Log/Login\";\nimport Register from \"./Log/Register\";\nimport AppRoutes from \"./Route/AppRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const handleLogin = () => {\n    // Your login logic here...\n\n    // Set isLoggedIn to true after a successful login\n    setLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(AppRoutes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9ogPs/qKjoLSy/tthqIGD5LodSI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Routes","Route","Login","Register","AppRoutes","App","isLoggedIn","setLoggedIn","handleLogin"],"sources":["C:/Users/ABCD/Desktop/task-management-app-master/frontend/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useState } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Login from \"./Log/Login\";\nimport Register from \"./Log/Register\";\nimport AppRoutes from \"./Route/AppRoutes\";\n\nfunction App() {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n\n  const handleLogin = () => {\n    // Your login logic here...\n\n    // Set isLoggedIn to true after a successful login\n    setLoggedIn(true);\n  };\n\n  return (\n    <BrowserRouter>\n      <div>\n        <Routes>\n          <Route path=\"/\" element={<Login onLogin={handleLogin} />} />\n          <Route path=\"/register\" element={<Register />} />\n        </Routes>\n        {isLoggedIn && <AppRoutes />}\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,SAAS,MAAM,mBAAmB;AAAC;AAE1C,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMU,WAAW,GAAG,MAAM;IACxB;;IAEA;IACAD,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACE,QAAC,aAAa;IAAA,uBACZ;MAAA,wBACE,QAAC,MAAM;QAAA,wBACL,QAAC,KAAK;UAAC,IAAI,EAAC,GAAG;UAAC,OAAO,eAAE,QAAC,KAAK;YAAC,OAAO,EAAEC;UAAY;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG,eAC5D,QAAC,KAAK;UAAC,IAAI,EAAC,WAAW;UAAC,OAAO,eAAE,QAAC,QAAQ;YAAA;YAAA;YAAA;UAAA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1C,EACRF,UAAU,iBAAI,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACxB;IAAA;IAAA;IAAA;EAAA,QACQ;AAEpB;AAAC,GArBQD,GAAG;AAAA,KAAHA,GAAG;AAuBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}